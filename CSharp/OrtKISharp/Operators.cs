//This file is automatically generated from the onnx def files via tools/gen_operators.py.
using System.Runtime.InteropServices;

namespace OrtKISharp;

internal partial class Native
{
    [DllImport(LibraryName)]
    public static extern Tensor ortki_Abs(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Acos(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Acosh(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Add(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_And(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ArgMax(Tensor data, long axis, long keepdims, long select_last_index);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ArgMin(Tensor data, long axis, long keepdims, long select_last_index);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Asin(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Asinh(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Atan(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Atanh(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_AveragePool(Tensor X, string auto_pad, long ceil_mode, long count_include_pad, long[] kernel_shape, nuint kernel_shape_size, long[] pads, nuint pads_size, long[] strides, nuint strides_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Bernoulli(Tensor input, long dtype, float seed);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_BitShift(Tensor X, Tensor Y, string direction);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_BlackmanWindow(Tensor size, long output_datatype, long periodic);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Cast(Tensor input, long to);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_CastLike(Tensor input, Tensor target_type);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Ceil(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Celu(Tensor X, float alpha);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Clip(Tensor input, Tensor min, Tensor max);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Compress(Tensor input, Tensor condition, long axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Concat(IntPtr[] inputs, nuint input_size, long axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ConcatFromSequence(IntPtr[] input_sequence, nuint input_size, long axis, long new_axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Conv(Tensor X, Tensor W, Tensor B, string auto_pad, long[] dilations, nuint dilations_size, long group, long[] kernel_shape, nuint kernel_shape_size, long[] pads, nuint pads_size, long[] strides, nuint strides_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ConvInteger(Tensor x, Tensor w, Tensor x_zero_point, Tensor w_zero_point, string auto_pad, long[] dilations, nuint dilations_size, long group, long[] kernel_shape, nuint kernel_shape_size, long[] pads, nuint pads_size, long[] strides, nuint strides_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ConvTranspose(Tensor X, Tensor W, Tensor B, string auto_pad, long[] dilations, nuint dilations_size, long group, long[] kernel_shape, nuint kernel_shape_size, long[] output_padding, nuint output_padding_size, long[] output_shape, nuint output_shape_size, long[] pads, nuint pads_size, long[] strides, nuint strides_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Cos(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Cosh(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_CumSum(Tensor x, Tensor axis, long exclusive, long reverse);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_DFT(Tensor input, Tensor dft_length, long axis, long inverse, long onesided);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_DepthToSpace(Tensor input, long blocksize, string mode);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_DequantizeLinear(Tensor x, Tensor x_scale, Tensor x_zero_point, long axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Det(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Div(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_Dropout(Tensor data, Tensor ratio, Tensor training_mode, long seed);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_DynamicQuantizeLinear(Tensor x);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Einsum(IntPtr[] Inputs, nuint input_size, string equation);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Elu(Tensor X, float alpha);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Equal(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Erf(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Exp(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Expand(Tensor input, Tensor shape);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_EyeLike(Tensor input, long dtype, long k);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Flatten(Tensor input, long axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Floor(Tensor X);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_GRU(Tensor X, Tensor W, Tensor R, Tensor B, Tensor sequence_lens, Tensor initial_h, float[] activation_alpha, nuint activation_alpha_size, float[] activation_beta, nuint activation_beta_size, string[] activations, nuint activations_size, float clip, string direction, long hidden_size, long layout, long linear_before_reset);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Gather(Tensor data, Tensor indices, long axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_GatherElements(Tensor data, Tensor indices, long axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_GatherND(Tensor data, Tensor indices, long batch_dims);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Gemm(Tensor A, Tensor B, Tensor C, float alpha, float beta, long transA, long transB);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_GlobalAveragePool(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_GlobalLpPool(Tensor X, long p);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_GlobalMaxPool(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Greater(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_GreaterOrEqual(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_GridSample(Tensor X, Tensor grid, long align_corners, string mode, string padding_mode);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_HammingWindow(Tensor size, long output_datatype, long periodic);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_HannWindow(Tensor size, long output_datatype, long periodic);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_HardSigmoid(Tensor X, float alpha, float beta);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_HardSwish(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Hardmax(Tensor input, long axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Identity(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_InstanceNormalization(Tensor input, Tensor scale, Tensor B, float epsilon);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_IsInf(Tensor X, long detect_negative, long detect_positive);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_IsNaN(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_LRN(Tensor X, float alpha, float beta, float bias, long size);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_LayerNormalization(Tensor X, Tensor Scale, Tensor B, long axis, float epsilon, long stash_type);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_LeakyRelu(Tensor X, float alpha);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Less(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_LessOrEqual(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Log(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_LogSoftmax(Tensor input, long axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_LpNormalization(Tensor input, long axis, long p);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_LpPool(Tensor X, string auto_pad, long[] kernel_shape, nuint kernel_shape_size, long p, long[] pads, nuint pads_size, long[] strides, nuint strides_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_MatMul(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_MatMulInteger(Tensor A, Tensor B, Tensor a_zero_point, Tensor b_zero_point);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Max(IntPtr[] data_0, nuint input_size);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_MaxPool(Tensor X, string auto_pad, long ceil_mode, long[] dilations, nuint dilations_size, long[] kernel_shape, nuint kernel_shape_size, long[] pads, nuint pads_size, long storage_order, long[] strides, nuint strides_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_MaxRoiPool(Tensor X, Tensor rois, long[] pooled_shape, nuint pooled_shape_size, float spatial_scale);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_MaxUnpool(Tensor X, Tensor I, Tensor output_shape, long[] kernel_shape, nuint kernel_shape_size, long[] pads, nuint pads_size, long[] strides, nuint strides_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Mean(IntPtr[] data_0, nuint input_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_MeanVarianceNormalization(Tensor X, long[] axes, nuint axes_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_MelWeightMatrix(Tensor num_mel_bins, Tensor dft_length, Tensor sample_rate, Tensor lower_edge_hertz, Tensor upper_edge_hertz, long output_datatype);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Min(IntPtr[] data_0, nuint input_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Mod(Tensor A, Tensor B, long fmod);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Mul(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Multinomial(Tensor input, long dtype, long sample_size, float seed);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Neg(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_NegativeLogLikelihoodLoss(Tensor input, Tensor target, Tensor weight, long ignore_index, string reduction);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_NonMaxSuppression(Tensor boxes, Tensor scores, Tensor max_output_boxes_per_class, Tensor iou_threshold, Tensor score_threshold, long center_point_box);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_NonZero(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Not(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_OneHot(Tensor indices, Tensor depth, Tensor values, long axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_OptionalGetElement(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_OptionalHasElement(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Or(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_PRelu(Tensor X, Tensor slope);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Pad(Tensor data, Tensor pads, Tensor constant_value, string mode);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Pow(Tensor X, Tensor Y);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_QLinearConv(Tensor x, Tensor x_scale, Tensor x_zero_point, Tensor w, Tensor w_scale, Tensor w_zero_point, Tensor y_scale, Tensor y_zero_point, Tensor B, string auto_pad, long[] dilations, nuint dilations_size, long group, long[] kernel_shape, nuint kernel_shape_size, long[] pads, nuint pads_size, long[] strides, nuint strides_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_QLinearMatMul(Tensor a, Tensor a_scale, Tensor a_zero_point, Tensor b, Tensor b_scale, Tensor b_zero_point, Tensor y_scale, Tensor y_zero_point);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_QuantizeLinear(Tensor x, Tensor y_scale, Tensor y_zero_point, long axis);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_RNN(Tensor X, Tensor W, Tensor R, Tensor B, Tensor sequence_lens, Tensor initial_h, float[] activation_alpha, nuint activation_alpha_size, float[] activation_beta, nuint activation_beta_size, string[] activations, nuint activations_size, float clip, string direction, long hidden_size, long layout);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_RandomNormal(long dtype, float mean, float scale, float seed, long[] shape, nuint shape_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_RandomNormalLike(Tensor input, long dtype, float mean, float scale, float seed);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_RandomUniform(long dtype, float high, float low, float seed, long[] shape, nuint shape_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_RandomUniformLike(Tensor input, long dtype, float high, float low, float seed);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Range(Tensor start, Tensor limit, Tensor delta);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Reciprocal(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ReduceL1(Tensor data, long[] axes, nuint axes_size, long keepdims);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ReduceL2(Tensor data, long[] axes, nuint axes_size, long keepdims);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ReduceLogSum(Tensor data, long[] axes, nuint axes_size, long keepdims);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ReduceLogSumExp(Tensor data, long[] axes, nuint axes_size, long keepdims);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ReduceMax(Tensor data, long[] axes, nuint axes_size, long keepdims);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ReduceMean(Tensor data, long[] axes, nuint axes_size, long keepdims);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ReduceMin(Tensor data, long[] axes, nuint axes_size, long keepdims);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ReduceProd(Tensor data, long[] axes, nuint axes_size, long keepdims);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ReduceSum(Tensor data, Tensor axes, long keepdims, long noop_with_empty_axes);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ReduceSumSquare(Tensor data, long[] axes, nuint axes_size, long keepdims);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Relu(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Reshape(Tensor data, Tensor shape, long allowzero);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ReverseSequence(Tensor input, Tensor sequence_lens, long batch_axis, long time_axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_RoiAlign(Tensor X, Tensor rois, Tensor batch_indices, string coordinate_transformation_mode, string mode, long output_height, long output_width, long sampling_ratio, float spatial_scale);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Round(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_STFT(Tensor signal, Tensor frame_step, Tensor window, Tensor frame_length, long onesided);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Scatter(Tensor data, Tensor indices, Tensor updates, long axis);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ScatterElements(Tensor data, Tensor indices, Tensor updates, long axis, string reduction);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ScatterND(Tensor data, Tensor indices, Tensor updates, string reduction);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Selu(Tensor X, float alpha, float gamma);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_SequenceAt(IntPtr[] input_sequence, nuint input_size, Tensor position);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_SequenceConstruct(IntPtr[] inputs, nuint input_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_SequenceEmpty(long dtype);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_SequenceErase(IntPtr[] input_sequence, nuint input_size, Tensor position);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_SequenceInsert(IntPtr[] input_sequence, nuint input_size, Tensor tensor, Tensor position);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_SequenceLength(IntPtr[] input_sequence, nuint input_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Shape(Tensor data, long end, long start);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Shrink(Tensor input, float bias, float lambd);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Sigmoid(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Sign(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Sin(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Sinh(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Size(Tensor data);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Slice(Tensor data, Tensor starts, Tensor ends, Tensor axes, Tensor steps);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Softmax(Tensor input, long axis);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_SoftmaxCrossEntropyLoss(Tensor scores, Tensor labels, Tensor weights, long ignore_index, string reduction);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Softplus(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Softsign(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_SpaceToDepth(Tensor input, long blocksize);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_SplitToSequence(Tensor input, Tensor split, long axis, long keepdims);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Sqrt(Tensor X);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Squeeze(Tensor data, Tensor axes);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_StringNormalizer(Tensor X, string case_change_action, long is_case_sensitive, string locale, string[] stopwords, nuint stopwords_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Sub(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Sum(IntPtr[] data_0, nuint input_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Tan(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Tanh(Tensor input);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_TfIdfVectorizer(Tensor X, long max_gram_length, long max_skip_count, long min_gram_length, string mode, long[] ngram_counts, nuint ngram_counts_size, long[] ngram_indexes, nuint ngram_indexes_size, long[] pool_int64s, nuint pool_int64s_size, string[] pool_strings, nuint pool_strings_size, float[] weights, nuint weights_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ThresholdedRelu(Tensor X, float alpha);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Tile(Tensor input, Tensor repeats);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_TopK(Tensor X, Tensor K, long axis, long largest, long sorted);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Transpose(Tensor data, long[] perm, nuint perm_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Trilu(Tensor input, Tensor k, long upper);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_Unique(Tensor X, long axis, long sorted);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Unsqueeze(Tensor data, Tensor axes);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Where(Tensor condition, Tensor X, Tensor Y);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Xor(Tensor A, Tensor B);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ArrayFeatureExtractor(Tensor X, Tensor Y);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Binarizer(Tensor X, float threshold);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_CastMap(Tensor X, string cast_to, string map_form, long max_map);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_CategoryMapper(Tensor X, long[] cats_int64s, nuint cats_int64s_size, string[] cats_strings, nuint cats_strings_size, long default_int64, string default_string);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_DictVectorizer(Tensor X, long[] int64_vocabulary, nuint int64_vocabulary_size, string[] string_vocabulary, nuint string_vocabulary_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_FeatureVectorizer(IntPtr[] X, nuint input_size, long[] inputdimensions, nuint inputdimensions_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Imputer(Tensor X, float[] imputed_value_floats, nuint imputed_value_floats_size, long[] imputed_value_int64s, nuint imputed_value_int64s_size, float replaced_value_float, long replaced_value_int64);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_LabelEncoder(Tensor X, float default_float, long default_int64, string default_string, float[] keys_floats, nuint keys_floats_size, long[] keys_int64s, nuint keys_int64s_size, string[] keys_strings, nuint keys_strings_size, float[] values_floats, nuint values_floats_size, long[] values_int64s, nuint values_int64s_size, string[] values_strings, nuint values_strings_size);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_LinearClassifier(Tensor X, long[] classlabels_ints, nuint classlabels_ints_size, string[] classlabels_strings, nuint classlabels_strings_size, float[] coefficients, nuint coefficients_size, float[] intercepts, nuint intercepts_size, long multi_class, string post_transform);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_LinearRegressor(Tensor X, float[] coefficients, nuint coefficients_size, float[] intercepts, nuint intercepts_size, string post_transform, long targets);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Normalizer(Tensor X, string norm);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_OneHotEncoder(Tensor X, long[] cats_int64s, nuint cats_int64s_size, string[] cats_strings, nuint cats_strings_size, long zeros);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_SVMClassifier(Tensor X, long[] classlabels_ints, nuint classlabels_ints_size, string[] classlabels_strings, nuint classlabels_strings_size, float[] coefficients, nuint coefficients_size, float[] kernel_params, nuint kernel_params_size, string kernel_type, string post_transform, float[] prob_a, nuint prob_a_size, float[] prob_b, nuint prob_b_size, float[] rho, nuint rho_size, float[] support_vectors, nuint support_vectors_size, long[] vectors_per_class, nuint vectors_per_class_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_SVMRegressor(Tensor X, float[] coefficients, nuint coefficients_size, float[] kernel_params, nuint kernel_params_size, string kernel_type, long n_supports, long one_class, string post_transform, float[] rho, nuint rho_size, float[] support_vectors, nuint support_vectors_size);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_Scaler(Tensor X, float[] offset, nuint offset_size, float[] scale, nuint scale_size);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_TreeEnsembleClassifier(Tensor X, float[] base_values, nuint base_values_size, Tensor base_values_as_tensor, long[] class_ids, nuint class_ids_size, long[] class_nodeids, nuint class_nodeids_size, long[] class_treeids, nuint class_treeids_size, float[] class_weights, nuint class_weights_size, Tensor class_weights_as_tensor, long[] classlabels_int64s, nuint classlabels_int64s_size, string[] classlabels_strings, nuint classlabels_strings_size, long[] nodes_falsenodeids, nuint nodes_falsenodeids_size, long[] nodes_featureids, nuint nodes_featureids_size, float[] nodes_hitrates, nuint nodes_hitrates_size, Tensor nodes_hitrates_as_tensor, long[] nodes_missing_value_tracks_true, nuint nodes_missing_value_tracks_true_size, string[] nodes_modes, nuint nodes_modes_size, long[] nodes_nodeids, nuint nodes_nodeids_size, long[] nodes_treeids, nuint nodes_treeids_size, long[] nodes_truenodeids, nuint nodes_truenodeids_size, float[] nodes_values, nuint nodes_values_size, Tensor nodes_values_as_tensor, string post_transform);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_TreeEnsembleRegressor(Tensor X, string aggregate_function, float[] base_values, nuint base_values_size, Tensor base_values_as_tensor, long n_targets, long[] nodes_falsenodeids, nuint nodes_falsenodeids_size, long[] nodes_featureids, nuint nodes_featureids_size, float[] nodes_hitrates, nuint nodes_hitrates_size, Tensor nodes_hitrates_as_tensor, long[] nodes_missing_value_tracks_true, nuint nodes_missing_value_tracks_true_size, string[] nodes_modes, nuint nodes_modes_size, long[] nodes_nodeids, nuint nodes_nodeids_size, long[] nodes_treeids, nuint nodes_treeids_size, long[] nodes_truenodeids, nuint nodes_truenodeids_size, float[] nodes_values, nuint nodes_values_size, Tensor nodes_values_as_tensor, string post_transform, long[] target_ids, nuint target_ids_size, long[] target_nodeids, nuint target_nodeids_size, long[] target_treeids, nuint target_treeids_size, float[] target_weights, nuint target_weights_size, Tensor target_weights_as_tensor);

    [DllImport(LibraryName)]
    public static extern Tensor ortki_ZipMap(Tensor X, long[] classlabels_int64s, nuint classlabels_int64s_size, string[] classlabels_strings, nuint classlabels_strings_size);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_Adagrad(Tensor R, Tensor T, Tensor inputs, float decay_factor, float epsilon, float norm_coefficient);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_Adam(Tensor R, Tensor T, Tensor inputs, float alpha, float beta, float epsilon, float norm_coefficient, float norm_coefficient_post);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_Gradient(IntPtr[] Inputs, nuint input_size, string[] xs, nuint xs_size, string y, string[] zs, nuint zs_size);

    [DllImport(LibraryName)]
    public static extern TensorSeq ortki_Momentum(Tensor R, Tensor T, Tensor inputs, float alpha, float beta, string mode, float norm_coefficient);

}